{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appServicePlan_skuName": {
            "defaultValue": "S1",
            "type": "String"
        },
        "appServicePlan_skuTier": {
            "defaultValue": "Standard",
            "type": "String"
        },
        "appServicePlan_skuFamily": {
            "defaultValue": "S",
            "type": "String"
        },
        "appServicePlan_skuSize": {
            "defaultValue": "S1",
            "type": "String"
        },
        "appServicePlan_workerSizeId": {
            "defaultValue": 1,
            "type": "Int"
        },
        "ParentResourceGroupName": {
            "type": "String",
            "defaultValue": "ccafpi"
        },
        "uniqueDnsNameForTM": {
            "type": "string",
            "defaultValue": "ccafpi-tm",
            "metadata": {
                "description": "Relative DNS name for the traffic manager profile, resulting FQDN will be <uniqueDnsName>.trafficmanager.net, must be globally unique."
            }
        },
        "keyvault_name": {
            "type": "String",
            "defaultValue": "d365ccafpi"
        },
        "SSLdomainName": {
            "type": "String",
            "defaultValue": "www.d365ccafpi.com"
        },
        "msdeployPackageUrl": {
            "type": "securestring",
            "defaultValue": "SampleAPI.zip"
        },
        "keysAppPermissions": {
            "type": "array",
            "defaultValue": [
                "list",
                "get"
            ],
            "metadata": {
                "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
            }
        },
        "secretsAppPermissions": {
            "type": "array",
            "defaultValue": [
                "list",
                "get"
            ],
            "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
        },
        "certificatesAppPermissions": {
            "type": "array",
            "defaultValue": [
                "list",
                "get"
            ],
            "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
        },
        "keysUserPermissions": {
            "type": "array",
            "defaultValue": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
            ],
            "metadata": {
                "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
            }
        },
        "secretsUserPermissions": {
            "type": "array",
            "defaultValue": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
            ],
            "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
        },
        "certificatesUserPermissions": {
            "type": "array",
            "defaultValue": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "ManageContacts",
                "ManageIssuers",
                "GetIssuers",
                "ListIssuers",
                "SetIssuers",
                "DeleteIssuers"
            ],
            "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
        },
        "appServicesPerRegions": {
            "type": "array",
            "defaultValue": [
                {
                    "location": "West US",
                    "appName": "prod-amer-ccafpi-webapp-0",
                    "resourceGroupName": "prod-amer-ccafpi-rg-0"
                },
                {
                    "location": "East US",
                    "appName": "prod-amer-ccafpi-webapp-1",
                    "resourceGroupName": "prod-amer-ccafpi-rg-1"
                }
            ]
        },
        "minimumCapacity": {
            "type": "Int",
            "defaultValue": 1,
            "metadata": {
                "description": "The minimum capacity.  Autoscale engine will ensure the instance count is at least this value."
            }
        },
        "maximumCapacity": {
            "type": "Int",
            "defaultValue": 10,
            "metadata": {
                "description": "The maximum capacity.  Autoscale engine will ensure the instance count is not greater than this value."
            }
        },
        "defaultCapacity": {
            "type": "Int",
            "defaultValue": 1,
            "metadata": {
                "description": "The default capacity.  Autoscale engine will preventively set the instance count to be this value if it can not find any metric data."
            }
        },
        "metricName": {
            "type": "string",
            "defaultValue": "CpuPercentage",
            "metadata": {
                "description": "The metric name."
            }
        },
        "metricThresholdToScaleOut": {
            "type": "Int",
            "defaultValue": 60,
            "metadata": {
                "description": "The metric upper threshold.  If the metric value is above this threshold then autoscale engine will initiate scale out action."
            }
        },
        "metricThresholdToScaleIn": {
            "type": "Int",
            "defaultValue": 20,
            "metadata": {
                "description": "The metric lower threshold.  If the metric value is below this threshold then autoscale engine will initiate scale in action."
            }
        },
        "changePercentScaleOut": {
            "type": "Int",
            "defaultValue": 20,
            "metadata": {
                "description": "The percentage to increase the instance count when autoscale engine is initiating scale out action."
            }
        },
        "changePercentScaleIn": {
            "type": "Int",
            "defaultValue": 10,
            "metadata": {
                "description": "The percentage to decrease the instance count when autoscale engine is initiating scale in action."
            }
        },
        "AppSettings": {
            "type": "object",
            "defaultValue": {
                "ASPNETCORE_ENVIRONMENT": "Development",
                "WEBSITE_LOAD_CERTIFICATES": "*",
                "MSDEPLOY_RENAME_LOCKED_FILES": "1",
                "WEBSITE_HTTPLOGGING_RETENTION_DAYS": "7",
                "WEBSITE_NODE_DEFAULT_VERSION": "6.9.1",
                "WEBSITE_SWAP_WARMUP_PING_PATH": "/swagger",
                "WEBSITE_SWAP_WARMUP_PING_STATUSES": "200,301,302",
                "WEBSITE_FIRST_PARTY_ID": "AntMDS"
            }
        },
        "webServerSettings": {
            "type": "object",
            "defaultValue": {
                "alwaysOn": true
            }
        },
        "webServerSettingsSlot": {
            "type": "object",
            "defaultValue": {
                "alwaysOn": true,
                "autoSwapSlotName": "production"
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "name": "[parameters('appServicesPerRegions')[copyIndex('rgcopy')].resourceGroupName]",
            "location": "[parameters('appServicesPerRegions')[copyIndex('rgcopy')].location]",
            "properties": {
            },
            "copy": {
                "name": "rgcopy",
                "count": "[length(parameters('appServicesPerRegions'))]"
            }
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "name": "[parameters('ParentResourceGroupName')]",
            "location": "West US",
            "properties": {
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "TrafficManagerDeploy",
            "resourceGroup": "[parameters('ParentResourceGroupName')]",
            "dependsOn": [
                "[parameters('ParentResourceGroupName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            //node to create traffic manager profile, single instance will be deployed.
                            "apiVersion": "2018-04-01",
                            "type": "Microsoft.Network/trafficManagerProfiles",
                            "name": "[parameters('uniqueDnsNameForTM')]",
                            "location": "global",
                            "properties": {
                                "profileStatus": "Enabled",
                                "trafficRoutingMethod": "Performance",
                                "dnsConfig": {
                                    "relativeName": "[parameters('uniqueDnsNameForTM')]",
                                    "ttl": 30
                                },
                                "monitorConfig": {
                                    "protocol": "HTTP",
                                    "port": 80,
                                    "path": "/"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "appservicplanandappserviceedeployment",
            "resourceGroup": "[parameters('appServicesPerRegions')[copyIndex('appservicecopy')].resourceGroupName]",
            "dependsOn": [
                //"[resourceId('Microsoft.Resources/resourceGroups/',parameters('appServicesPerRegions')[copyIndex('appservicecopy')].resourceGroupName)]",
                "rgcopy",
                "TrafficManagerDeploy"
            ],
            "copy": {
                "name": "appservicecopy",
                "count": "[length(parameters('appServicesPerRegions'))]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            //node to create app service plan for Americas, this will create multiple instances as per variable appServicesPerRegions locations
                            "type": "Microsoft.Web/serverfarms",
                            "sku": {
                                "name": "[parameters('appServicePlan_skuName')]",
                                "tier": "[parameters('appServicePlan_skuTier')]",
                                "size": "[parameters('appServicePlan_skuSize')]",
                                "family": "[parameters('appServicePlan_skuFamily')]",
                                "capacity": "[parameters('appServicePlan_workerSizeId')]"
                            },
                            "name": "[concat('AppServicePlan-',parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName)]",
                            "apiVersion": "2018-02-01",
                            "location": "[parameters('appServicesPerRegions')[copyIndex('appservicecopy')].location]",
                            "kind": "app",
                            "properties": {
                                "name": "[concat('AppServicePlan-',parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName)]"
                            },
                            "dependsOn": [
                            ]
                        },
                        {
                            "type": "Microsoft.Insights/autoscalesettings",
                            "name": "[concat('AppServicePlan-',parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName,'-settings')]",
                            "dependsOn": [
                                "[concat('AppServicePlan-',parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName)]"
                            ],
                            "apiVersion": "2014-04-01",
                            "location": "[parameters('appServicesPerRegions')[copyIndex('appservicecopy')].location]",
                            "properties": {
                                "profiles": [
                                    {
                                        "name": "DefaultAutoscaleProfile",
                                        "capacity": {
                                            "minimum": "[parameters('minimumCapacity')]",
                                            "maximum": "[parameters('maximumCapacity')]",
                                            "default": "[parameters('defaultCapacity')]"
                                        },
                                        "rules": [
                                            {
                                                "metricTrigger": {
                                                    "metricName": "[parameters('metricName')]",
                                                    "metricNamespace": "microsoft.web/serverfarms",
                                                    "metricResourceUri": "[concat('/subscriptions/', Subscription().SubscriptionId,'/resourceGroups/', parameters('appServicesPerRegions')[copyIndex('appservicecopy')].resourceGroupName, '/providers/Microsoft.Web/serverfarms/', concat('AppServicePlan-',parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName))]",
                                                    "timeGrain": "PT5M",
                                                    "statistic": "Average",
                                                    "timeWindow": "PT10M",
                                                    "timeAggregation": "Average",
                                                    "operator": "GreaterThan",
                                                    "threshold": "[parameters('metricThresholdToScaleOut')]"
                                                },
                                                "scaleAction": {
                                                    "direction": "Increase",
                                                    "type": "PercentChangeCount",
                                                    "value": "[parameters('changePercentScaleOut')]",
                                                    "cooldown": "PT10M"
                                                }
                                            },
                                            {
                                                "metricTrigger": {
                                                    "metricName": "[parameters('metricName')]",
                                                    "metricNamespace": "microsoft.web/serverfarms",
                                                    "metricResourceUri": "[concat('/subscriptions/', Subscription().SubscriptionId,'/resourceGroups/', parameters('appServicesPerRegions')[copyIndex('appservicecopy')].resourceGroupName, '/providers/Microsoft.Web/serverfarms/', concat('AppServicePlan-',parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName))]",
                                                    "timeGrain": "PT5M",
                                                    "statistic": "Average",
                                                    "timeWindow": "PT10M",
                                                    "timeAggregation": "Average",
                                                    "operator": "LessThan",
                                                    "threshold": "[parameters('metricThresholdToScaleIn')]"
                                                },
                                                "scaleAction": {
                                                    "direction": "Decrease",
                                                    "type": "PercentChangeCount",
                                                    "value": "[parameters('changePercentScaleIn')]",
                                                    "cooldown": "PT10M"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "enabled": true,
                                "targetResourceUri": "[concat('/subscriptions/', Subscription().SubscriptionId,'/resourceGroups/', parameters('appServicesPerRegions')[copyIndex('appservicecopy')].resourceGroupName, '/providers/Microsoft.Web/serverfarms/', concat('AppServicePlan-',parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName))]"
                            }
                        },
                        {
                            //node to create app service for Americas,, this will create multiple instances as per variable appServicesPerRegions locations
                            "type": "Microsoft.Web/sites",
                            "kind": "WebApp",
                            "name": "[parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName]",
                            "apiVersion": "2018-11-01",
                            "location": "[parameters('appServicesPerRegions')[copyIndex('appservicecopy')].location]",
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "properties": {
                                "name": "[parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName]",
                                "serverFarmId": "[concat('/subscriptions/', Subscription().SubscriptionId,'/resourceGroups/', parameters('appServicesPerRegions')[copyIndex('appservicecopy')].resourceGroupName, '/providers/Microsoft.Web/serverfarms/', concat('AppServicePlan-',parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName))]",
                                "kind": "WebApp",
                                "httpsOnly": true
                            },
                            "dependsOn": [
                                "[concat('AppServicePlan-',parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName)]"
                            ],
                            "resources": [
                                {
                                    "type": "slots",
                                    "name": "[concat(parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName,'-staging')]",
                                    "apiVersion": "2018-11-01",
                                    "location": "[parameters('appServicesPerRegions')[copyIndex('appservicecopy')].location]",
                                    "dependsOn": [
                                        "[concat(parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName)]"
                                    ],
                                    "properties": {
                                        "serverFarmId": "[concat('/subscriptions/', Subscription().SubscriptionId,'/resourceGroups/', parameters('appServicesPerRegions')[copyIndex('appservicecopy')].resourceGroupName, '/providers/Microsoft.Web/serverfarms/', concat('AppServicePlan-',parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName))]",
                                        "kind": "WebApp",
                                        "httpsOnly": true
                                    },
                                    "resources": [
                                        {
                                            "name": "MSDeploy",
                                            "type": "Extensions",
                                            "apiVersion": "2015-02-01",
                                            "dependsOn": [
                                                "[parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName]",
                                                "[concat(parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName,'-staging')]"
                                            ],
                                            "properties": {
                                                "packageUri": "[parameters('msdeployPackageUrl')]",
                                                "AppOffline": true
                                            }
                                        },
                                        {
                                            "apiVersion": "2018-02-01",
                                            "type": "config",
                                            "name": "appsettings",
                                            "properties": "[parameters('AppSettings')]",
                                            "dependsOn": [
                                                "[concat(parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName,'-staging')]"
                                            ]
                                        },
                                        {
                                            "apiVersion": "2018-02-01",
                                            "type": "config",
                                            "name": "web",
                                            "properties": "[parameters('webServerSettingsSlot')]",
                                            "dependsOn": [
                                                "[concat(parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName,'-staging')]"
                                            ]
                                        }

                                    ]
                                },
                                {
                                    "apiVersion": "2018-02-01",
                                    "type": "config",
                                    "name": "appsettings",
                                    "properties": "[parameters('AppSettings')]",
                                    "dependsOn": [
                                        "[concat(parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName)]"
                                    ]
                                },
                                {
                                    "apiVersion": "2018-02-01",
                                    "type": "config",
                                    "name": "web",
                                    "properties": "[parameters('webServerSettings')]",
                                    "dependsOn": [
                                       "[concat(parameters('appServicesPerRegions')[copyIndex('appservicecopy')].appName)]"
                                    ]
                                }
                            ]

                        }

                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "TrafficManagerEndpointsDeploy",
            "resourceGroup": "[parameters('ParentResourceGroupName')]",
            "dependsOn": [
                "TrafficManagerDeploy",
                "appservicplanandappserviceedeployment",
                "appservicecopy"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "copy": [
                        {
                            "name": "resources",
                            "count": "[length(parameters('appServicesPerRegions'))]",
                            "input": {
                                "apiVersion": "2018-04-01",
                                "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
                                "name": "[concat(parameters('uniqueDnsNameForTM'),'/',parameters('appServicesPerRegions')[copyIndex('resources')].appName)]",
                                "properties": {
                                    "endpointStatus": "Enabled",
                                    "targetResourceId": "[concat('/subscriptions/', Subscription().SubscriptionId,'/resourceGroups/', parameters('appServicesPerRegions')[copyIndex('resources')].resourceGroupName,'/providers/Microsoft.Web/sites/',parameters('appServicesPerRegions')[copyIndex('resources')].appName)]"
                                }
                            }
                        }
                    ]
                }
            }
        } //,
        // {
        //     "type": "Microsoft.Resources/deployments",
        //     "apiVersion": "2019-10-01",
        //     "name": "KeyVaultDeploy",
        //     "resourceGroup": "[parameters('ParentResourceGroupName')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Resources/resourceGroups',parameters('ParentResourceGroupName'))]",
        //         "appservicecopy"
        //     ],
        //     "properties": {
        //         "mode": "Incremental",
        //         "template": {
        //             "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        //             "contentVersion": "1.0.0.0",
        //             "resources": [
        //                 {
        //                     // node to create keyvault - single instance
        //                     "type": "Microsoft.KeyVault/vaults",
        //                     "name": "[parameters('keyvault_name')]",
        //                     "apiVersion": "2016-10-01",
        //                     "location": "WEST US",
        //                     "dependsOn": [
        //                     ],
        //                     "properties": {
        //                         "enabledForDeployment": true,
        //                         "enabledForDiskEncryption": false,
        //                         "enabledForTemplateDeployment": true,
        //                         "tenantId": "[subscription().tenantId]",  
        //                         "accessPolicies": [],                             
        //                         // "copy": [
        //                         //     {
        //                         //         "name": "accessPolicies",
        //                         //         "count": "[length(parameters('appServicesPerRegions'))]",
        //                         //         "input": {
        //                         //             "objectId": "[reference(concat('/subscriptions/', Subscription().SubscriptionId,'/resourceGroups/', parameters('appServicesPerRegions')[copyIndex('accessPolicies')].resourceGroupName,'/providers/Microsoft.Web/sites/',parameters('appServicesPerRegions')[copyIndex('accessPolicies')].appName),'2019-08-01', 'full').identity.principalId]",
        //                         //             "tenantId": "[subscription().tenantId]",
        //                         //             "permissions": {
        //                         //                 "keys": "[parameters('keysAppPermissions')]",
        //                         //                 "secrets": "[parameters('secretsAppPermissions')]",
        //                         //                 "certificates": "[parameters('certificatesAppPermissions')]"
        //                         //             }
        //                         //         }
        //                         //     }
        //                         // ],
        //                         "sku": {
        //                             "name": "Standard",
        //                             "family": "A"
        //                         },
        //                         "networkAcls": {
        //                             "defaultAction": "Allow",
        //                             "bypass": "AzureServices"
        //                         }
        //                     }
        //                 }
        //             ]
        //         }
        //     }
        // },
        // {
        //     "type": "Microsoft.Resources/deployments",
        //     "apiVersion": "2019-10-01",
        //     "name": "[concat('CustomDomainDeploy-', copyIndex('resources'))]",
        //     "resourceGroup": "[parameters('appServicesPerRegions')[copyIndex('resources')].resourceGroupName]",
        //     "dependsOn": [
        //         "TrafficManagerDeploy",
        //         "appservicplanandappserviceedeployment"
        //     ],
        //     "copy": {
        //         "name": "resources",
        //         "count": "[length(parameters('appServicesPerRegions'))]"
        //     },
        //     "properties": {
        //         "mode": "Incremental",
        //         "template": {
        //             "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        //             "contentVersion": "1.0.0.0",
        //             "resources": [
        //                 {
        //                     "type": "Microsoft.Web/sites/hostNameBindings",
        //                     "apiVersion": "2018-11-01",
        //                     "name": "[concat(parameters('appServicesPerRegions')[copyIndex('resources')].appName,'/',parameters('SSLdomainName'))]",
        //                     "properties": {
        //                         "siteName": "[concat(parameters('appServicesPerRegions')[copyIndex('resources')].appName)]",
        //                         "hostNameType": "Verified"
        //                         // "sslState": "SniEnabled"
        //                     }
        //                 }
        //             ]
        //         }
        //     }
        // }
    ]
}